print(dm_annsum)
print(dm_annsum_1)
# Count the occurrences of classifications in the Status
# column across the annotation types.
dm_catsum = summarize_categorical(
annotated_regions = dm_annotated,
by = c('annot.type', title_str),
quiet = TRUE)
# Count the occurrences of classifications in the Status
# column across the annotation types.
dm_catsum_1 = summarize_categorical(
annotated_regions = dm_annotated_1,
by = c('annot.type', title_str),
quiet = TRUE)
#View a heatmap of regions occurring in pairs of annotations
annots_order = c(
'hg19_genes_promoters',
'hg19_genes_5UTRs',
'hg19_genes_exons',
'hg19_genes_introns',
'hg19_genes_3UTRs',
'hg19_genes_cds',
'hg19_enhancers_fantom')
dm_vs_coannotations = plot_coannotations(
annotated_regions = dm_annotated,
annotation_order = annots_order,
axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
print(dm_vs_coannotations)
print(dm_vs_coannotations_1)
dm_vs_coannotations_1 = plot_coannotations(
annotated_regions = dm_annotated_1,
annotation_order = annots_order,
axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
print(dm_vs_coannotations_1)
dm_annotations_plot = plot_annotation(annotated_regions = dm_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1',
x_label = 'Annotation type',
y_label = 'Count')
print(dm_annotations_plot)
dm_annotations_plot_1 = plot_annotation(annotated_regions = dm_annotated_1,
annotation_order = annots_order,
plot_title = 'Annotations for E1',
x_label = 'Annotation type',
y_label = 'Count')
print(dm_annotations_plot_1)
# View the number of regions per annotation and include the annotation
# of randomized regions
dm_annotations_plot_wrandom = plot_annotation(
annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type',
y_label = 'Count')
print(dm_annotations_plot_wrandom)
# View the number of regions per annotation and include the annotation
# of randomized regions
dm_annotations_plot_wrandom_1 = plot_annotation(
annotated_regions = dm_annotated_1,
annotated_random = dm_random_annotated_1,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type',
y_label = 'Count')
print(dm_annotations_plot_wrandom_1)
rm(list=ls())
title_str <- 'Status'
setwd("~/Escritorio/M치ster/Segundo_cuatrimestre/1_Transcript칩mica/3_Entregas/Enrique/Datos/RESULTS")
#Load BED file
dm_regions <- read_regions(con='./Modelo_11_estados/Results_0/Monocytes_0_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
dm_regions_T <- read_regions(con='./Modelo_11_estados/Results_0.95/Monocytes_0.95_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
# Select annotations for intersection with regions
annots = c('hg19_genes_cds', 'hg19_basicgenes', 'hg19_cpgs', 'hg19_genes_intergenic',
'hg19_enhancers_fantom')
# Build the annotations (a single GRanges object)
annotations = build_annotations(genome = 'hg19', annotations = annots)
# Intersect the regions we read in with the annotations
dm_annotated <- annotate_regions(regions = dm_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
dm_annotated_T <- annotate_regions(regions = dm_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
# Coerce to a data.frame
df_dm_annotated <- data.frame(dm_annotated)
df_dm_annotated_T <- data.frame(dm_annotated_T)
# Randomize the input regions
dm_random_regions <- randomize_regions(regions = dm_regions,
allow.overlaps = TRUE,
per.chromosome = TRUE)
dm_random_regions_T <- randomize_regions(regions = dm_regions_T,
allow.overlaps = TRUE,
per.chromosome = TRUE)
# Annotate the random regions using the same annotations as above
dm_random_annotated <- annotate_regions(regions = dm_random_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
dm_random_annotated_T <- annotate_regions(regions = dm_random_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
# Find the number of regions per annotation type
dm_annsum <- summarize_annotations(annotated_regions = dm_annotated,
quiet = TRUE)
print(dm_annsum)
dm_annsum_T <- summarize_annotations(annotated_regions = dm_annotated_T,
quiet = TRUE)
print(dm_annsum_T) # En total 3466 segmentos anotados como CDS
# Count the occurrences of classifications in the Status column across the
# annotation types.
dm_catsum <- summarize_categorical(annotated_regions = dm_annotated,
by = c('annot.type', title_str),
quiet = TRUE)
print(dm_catsum)
#View a heatmap of regions occurring in pairs of annotations
annots_order <- c('hg19_genes_promoters','hg19_genes_5UTRs','hg19_genes_exons',
'hg19_genes_introns','hg19_genes_3UTRs','hg19_genes_cds',
'hg19_enhancers_fantom')
plot_coannotations(annotated_regions = dm_annotated,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_coannotations(annotated_regions = dm_annotated_T,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_annotation(annotated_regions = dm_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
# View the number of regions per annotation and include the annotation of the
# randomized regions
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
#CpGIslands
annots_order = c('hg19_cpg_islands','hg19_cpg_shores','hg19_cpg_shelves',
'hg19_cpg_inter')
#CpGIslands
annots_order <- c('hg19_cpg_islands','hg19_cpg_shores','hg19_cpg_shelves',
'hg19_cpg_inter')
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
head(print(df_dm_annotated))
which(df_dm_annotated[,"annot.type" == "hg19_genes_promoters"])
df_dm_annotated[,"annot.type" == "hg19_genes_promoters"]
df_dm_annotated[ , "annot.type" == "hg19_genes_promoters"]
df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_cds"), "annot.symbol"])
df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_cds"), "annot.symbol"]
df_dm_annotated[which(df_dm_annotated$annot.type %in% c("hg19_genes_cds", "hg19_genes_promoters"), ]
df_dm_annotated[which(df_dm_annotated$annot.type %in% c("hg19_genes_cds", "hg19_genes_promoters")), ]
Results <- df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_promoters"), ]
Results_T <- df_dm_annotated_T[which(df_dm_annotated_T$annot.type == "hg19_genes_promoters"), ]
write.table(Results, "./Results_0/Results_0.txt", sep = "\t",
row.names = FALSE, quote = FALSE)
write.table(Results, "./Modelo_11_estados/Results_0/Results_0.txt", sep = "\t",
row.names = FALSE, quote = FALSE)
write.table(Results_T, "./Modelo_11_estados/Results_0.95/Results_0.95.txt",
sep = "\t", row.names = FALSE, quote = FALSE)
unique(Results$annot.symbol)
length(unique(Results$annot.symbol))
length(unique(Results_T$annot.symbol))
"CCR5" %in% Results$annot.symbol
"CCR5" %in% Results_T$annot.symbol
"CCR2" %in% Results_T$annot.symbol
"CD14" %in% Results$annot.symbol
"CD16" %in% Results$annot.symbol
"CD36" %in% Results$annot.symbol
"ALDH2" %in% Results$annot.symbol
"HIF1A" %in% Results$annot.symbol
"CD64" %in% Results$annot.symbol
"CD62L" %in% Results$annot.symbol
"CCR1" %in% Results_T$annot.symbol
"LYN" %in% Results_T$annot.symbol
"CD93" %in% Results_T$annot.symbol
"FPR1" %in% Results_T$annot.symbol
"MAFB" %in% Results_T$annot.symbol
"SIGLEC10" %in% Results_T$annot.symbol
"CX3CR1" %in% Results_T$annot.symbol
"CD31" %in% Results_T$annot.symbol
"ITGAL" %in% Results_T$annot.symbol
"XIST" %in% Results_T$annot.symbol
"XIST" %in% Results$annot.symbol
"CCR5" %in% Results$annot.symbol
"CCR2" %in% Results$annot.symbol
"CD16" %in% Results$annot.symbol
"CD14" %in% Results$annot.symbol
Results[which(Results$annot.symbol == "CD14"),]
Results[which(Results$annot.symbol == "CCR1"),]
Results[which(Results$annot.symbol == "LYN"),]
Results[which(Results$annot.symbol == "CBL"),]
library('annotatr')
title_str <- 'Status'
setwd("~/Escritorio/M치ster/Segundo_cuatrimestre/1_Transcript칩mica/3_Entregas/Enrique/Datos/RESULTS")
#Load BED file
dm_regions <- read_regions(con='./Modelo_11_estados/Results_0/Monocytes_0_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
dm_regions_T <- read_regions(con='./Modelo_11_estados/Results_0.95/Monocytes_0.95_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
# Select annotations for intersection with regions
annots <- c('hg19_genes_cds', 'hg19_basicgenes', 'hg19_cpgs',
'hg19_genes_intergenic', 'hg19_enhancers_fantom')
# Build the annotations (a single GRanges object)
annotations <- build_annotations(genome = 'hg19', annotations = annots)
# Intersect the regions we read in with the annotations
dm_annotated <- annotate_regions(regions = dm_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
dm_annotated_T <- annotate_regions(regions = dm_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
# A GRanges object is returned
#print(dm_annotated)
# Coerce to a data.frame
df_dm_annotated <- data.frame(dm_annotated)
df_dm_annotated_T <- data.frame(dm_annotated_T)
# See the GRanges column of dm_annotaed expanded
#print(head(df_dm_annotated))
# Randomize the input regions
dm_random_regions <- randomize_regions(regions = dm_regions,
allow.overlaps = TRUE,
per.chromosome = TRUE)
dm_random_regions_T <- randomize_regions(regions = dm_regions_T,
allow.overlaps = TRUE,
per.chromosome = TRUE)
# Annotate the random regions using the same annotations as above
dm_random_annotated <- annotate_regions(regions = dm_random_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
dm_random_annotated_T <- annotate_regions(regions = dm_random_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
# Find the number of regions per annotation type
dm_annsum <- summarize_annotations(annotated_regions = dm_annotated,
quiet = TRUE)
print(dm_annsum) # En total 3466 segmentos anotados como CDS
dm_annsum_T <- summarize_annotations(annotated_regions = dm_annotated_T,
quiet = TRUE)
print(dm_annsum_T) # En total 2869 segmentos anotados como CDS
# Count the occurrences of classifications in the Status column across the
# annotation types.
#dm_catsum <- summarize_categorical(annotated_regions = dm_annotated,
#                                   by = c('annot.type', title_str),
#                                   quiet = TRUE)
#print(dm_catsum)
#View a heatmap of regions occurring in pairs of annotations
annots_order <- c('hg19_genes_promoters','hg19_genes_5UTRs','hg19_genes_exons',
'hg19_genes_introns','hg19_genes_3UTRs','hg19_genes_cds',
'hg19_enhancers_fantom')
plot_coannotations(annotated_regions = dm_annotated,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_coannotations(annotated_regions = dm_annotated_T,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_annotation(annotated_regions = dm_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
# View the number of regions per annotation and include the annotation of the
# randomized regions
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
#CpGIslands
annots_order <- c('hg19_cpg_islands','hg19_cpg_shores','hg19_cpg_shelves',
'hg19_cpg_inter')
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
Results <- df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_promoters"), ]
Results_T <- df_dm_annotated_T[which(df_dm_annotated_T$annot.type == "hg19_genes_promoters"), ]
write.table(Results, "./Modelo_11_estados/Results_0/Results_0.txt", sep = "\t",
row.names = FALSE, quote = FALSE)
write.table(Results_T, "./Modelo_11_estados/Results_0.95/Results_0.95.txt",
sep = "\t", row.names = FALSE, quote = FALSE)
length(unique(Results$annot.symbol))
length(unique(Results_T$annot.symbol))
########################################################################################
########################################################################################
###########TODO ESTO PARA VARIOS ESTADOS O VARIAS CLASES CON ALGUNA CATEGOR칈A###########
########################################################################################
########################################################################################
# View the proportions of data classes in knownGene annotations
# The orders for the x-axis labels.
x_order = c(
'hg19_genes_promoters',
'hg19_genes_5UTRs',
'hg19_genes_exons',
'hg19_genes_introns',
'hg19_genes_3UTRs',
'hg19_genes_cds')
dm_vs_kg_cat = plot_categorical(
annotated_regions = dm_annotated, x='annot.type', fill=title_str,
x_order = x_order, position='fill',
legend_title = title_str,
x_label = 'knownGene Annotations',
y_label = 'Proportion')
print(dm_vs_kg_cat)
# View the proportions of data classes in CpG annotations
# The orders for the x-axis labels.
x_order = c(
'hg19_cpg_islands',
'hg19_cpg_shores',
'hg19_cpg_shelves',
'hg19_cpg_inter')
# Make a barplot of the data class where each bar
# is composed of the counts of CpG annotations.
dm_vs_cpg_cat1 = plot_categorical(
annotated_regions = dm_annotated, x='annot.type', fill=title_str,
x_order = x_order, position='fill',
legend_title = title_str,
x_label = 'CpG Annotations',
y_label = 'Proportion')
print(dm_vs_cpg_cat1)
# View the counts of CpG annotations in data classes
# The orders for the x-axis labels. This is also a subset
# of the labels (E1, E2, E3...).
x_order = c()
# The orders for the fill labels. Can also use this
# parameter to subset annotation types to fill.
fill_order = c(
'hg19_genes_promoters',
'hg19_genes_5UTRs',
'hg19_genes_exons',
'hg19_genes_introns',
'hg19_genes_3UTRs',
'hg19_genes_cds')
# Make a barplot of the data class where each bar
# is composed of the counts of CpG annotations.
dm_vs_cpg_cat1 = plot_categorical(
annotated_regions = dm_annotated, x=title_str, fill='annot.type',
x_order = x_order, fill_order = fill_order, position='stack',
plot_title = 'Status by Annotation Counts',
legend_title = 'Annotations',
x_label = title_str,
y_label = 'Count')
print(dm_vs_cpg_cat1)
# Make a barplot of the data class where each bar
# is composed of the *proportion* of CpG annotations.
dm_vs_cpg_cat2 = plot_categorical(
annotated_regions = dm_annotated, x=title_str, fill='annot.type',
x_order = x_order, fill_order = fill_order, position='fill',
plot_title = 'Status by CpG Annotation Counts',
legend_title = 'Annotations',
x_label = title_str,
y_label = 'Proportion')
print(dm_vs_cpg_cat2)
length(unique(df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_cds"), "annot.symbol"]))
#BiocManager::install("annotatr")
library('annotatr')
title_str <- 'Status'
setwd("~/Escritorio/M치ster/Segundo_cuatrimestre/1_Transcript칩mica/3_Entregas/Enrique/Datos/RESULTS")
#BiocManager::install("annotatr")
library('annotatr')
title_str <- 'Status'
setwd("~/Escritorio/M치ster/Segundo_cuatrimestre/1_Transcript칩mica/3_Entregas/Enrique/Datos/RESULTS")
#Load BED file
dm_regions <- read_regions(con='./Modelo_11_estados/Results_0/Monocytes_0_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
dm_regions_T <- read_regions(con='./Modelo_11_estados/Results_0.95/Monocytes_0.95_E1.bed',
genome = 'hg19', format = 'bed',
rename_name = title_str)
# Select annotations for intersection with regions
annots <- c('hg19_genes_cds', 'hg19_basicgenes', 'hg19_cpgs',
'hg19_genes_intergenic', 'hg19_enhancers_fantom')
# Build the annotations (a single GRanges object)
annotations <- build_annotations(genome = 'hg19', annotations = annots)
# Intersect the regions we read in with the annotations
dm_annotated <- annotate_regions(regions = dm_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
dm_annotated_T <- annotate_regions(regions = dm_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = FALSE)
# Coerce to a data.frame
df_dm_annotated <- data.frame(dm_annotated)
df_dm_annotated_T <- data.frame(dm_annotated_T)
# Randomize the input regions
dm_random_regions <- randomize_regions(regions = dm_regions,
allow.overlaps = TRUE,
per.chromosome = TRUE)
dm_random_regions_T <- randomize_regions(regions = dm_regions_T,
allow.overlaps = TRUE,
per.chromosome = TRUE)
# Annotate the random regions using the same annotations as above
dm_random_annotated <- annotate_regions(regions = dm_random_regions,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
dm_random_annotated_T <- annotate_regions(regions = dm_random_regions_T,
annotations = annotations,
minoverlap = 100L, #Overlap of annotations, f=-0.5
ignore.strand = TRUE, quiet = TRUE)
# Find the number of regions per annotation type
dm_annsum <- summarize_annotations(annotated_regions = dm_annotated,
quiet = TRUE)
print(dm_annsum) # En total 3466 segmentos anotados como CDS
dm_annsum_T <- summarize_annotations(annotated_regions = dm_annotated_T,
quiet = TRUE)
print(dm_annsum_T) # En total 2869 segmentos anotados como CDS
#View a heatmap of regions occurring in pairs of annotations
annots_order <- c('hg19_genes_promoters','hg19_genes_5UTRs','hg19_genes_exons',
'hg19_genes_introns','hg19_genes_3UTRs','hg19_genes_cds',
'hg19_enhancers_fantom')
plot_coannotations(annotated_regions = dm_annotated,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_coannotations(annotated_regions = dm_annotated_T,
annotation_order = annots_order, axes_label = 'Annotations',
plot_title = 'Regions in Pairs of Annotations')
plot_annotation(annotated_regions = dm_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1', x_label = 'Annotation type',
y_label = 'Count')
# View the number of regions per annotation and include the annotation of the
# randomized regions
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
#CpGIslands
annots_order <- c('hg19_cpg_islands','hg19_cpg_shores','hg19_cpg_shelves',
'hg19_cpg_inter')
plot_annotation(annotated_regions = dm_annotated,
annotated_random = dm_random_annotated,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
plot_annotation(annotated_regions = dm_annotated_T,
annotated_random = dm_random_annotated_T,
annotation_order = annots_order,
plot_title = 'Annotations for E1 (with rndm.)',
x_label = 'Annotation type', y_label = 'Count')
Results <- df_dm_annotated[which(df_dm_annotated$annot.type == "hg19_genes_promoters"), ]
Results_T <- df_dm_annotated_T[which(df_dm_annotated_T$annot.type == "hg19_genes_promoters"), ]
length(unique(Results$annot.symbol))
length(unique(Results_T$annot.symbol))
write.table(Results, "./Modelo_11_estados/Results_0/Results_0.txt", sep = "\t",
row.names = FALSE, quote = FALSE)
write.table(Results_T, "./Modelo_11_estados/Results_0.95/Results_0.95.txt",
sep = "\t", row.names = FALSE, quote = FALSE)
Results$annot.symbol == "POLB"
Results[, "annot.symbol" == "POLB"]
Results[, "annot.symbol" == "CD14"]
which(Results$annot.symbol == "CD14")
which(Results$annot.symbol == "POLB")
Results[which(Results$annot.symbol == "POLB"), ]
